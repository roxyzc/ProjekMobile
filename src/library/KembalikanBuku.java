/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package library;

/**
 *
 * @author user
 */

import java.sql.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class KembalikanBuku extends javax.swing.JFrame {

    /**
     * Creates new form KembalikanBuku
     */
    public KembalikanBuku() {
        initComponents();
        showTableBuku();
        
    }
    
    public void clearTxt(){
        txtNoBuku.setText("");
        txtJmlBuku.setText("");
    }
    
    private DefaultTableModel tableModel;
    private ResultSet resultSet;
    public final void showTableBuku(){
        try {
            System.out.println("Mengambil data buku di tampilkan...");
            Connection conn = Koneksi.ConnectDB();
            
//            String query = "SELECT * FROM tb_peminjam where userID='"+Library.session.getSession()+"'";
            String querry = "select count(*) from tb_peminjam where userID='"+Library.session.getSession()+"'";
            Statement sst = conn.createStatement();
            ResultSet rrs = sst.executeQuery(querry);
            rrs.next();
            int count = rrs.getInt(1);
            String[] AnoBuku = new String[count];
            
            String query = "SELECT * FROM tb_peminjam where userID='"+Library.session.getSession()+"'";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            int minjem = 0;
            while(rs.next()){
                AnoBuku[minjem] = rs.getString("no_bk");
                minjem++;
            }
            if(minjem > 0){
                Object[] columnTitle = {"No","Nama","Pengarang","Jumlah"};
                tableModel = new DefaultTableModel(null,columnTitle);
                TableKembalikan.setModel(tableModel);
                Statement statement = conn.createStatement();
                tableModel.getDataVector().removeAllElements();
                for (String i : AnoBuku) {
                    resultSet = statement.executeQuery("SELECT * FROM tb_buku WHERE no_bk='" + i + "'");
                    while (resultSet.next()) {
                        String queryy = "SELECT * FROM tb_peminjam where no_bk='" + i + "'";
                        Statement stt = conn.createStatement();
                        ResultSet rss = stt.executeQuery(queryy);
                        String AjmlBuku = null;
                        while(rss.next()){
                            AjmlBuku = rss.getString("jumlah_bk");
                        }
                        Object[] data = {
                            resultSet.getString("no_bk"),
                            resultSet.getString("nama_bk"),
                            resultSet.getString("pengarang_bk"),
                            AjmlBuku
                        };
                        tableModel.addRow(data);
                    }
                }
                System.out.println("Data buku Berhasil di tampilkan...");
            }else{
                Object[] columnTitle = {"No","Nama","Pengarang","Jumlah"};
                tableModel = new DefaultTableModel(null,columnTitle);
                TableKembalikan.setModel(tableModel);                
                tableModel.getDataVector().removeAllElements();
                 Object[] data = {
                    null,
                    null,
                    null,
                    null
                };
                tableModel.addRow(data);
            }
        } catch (SQLException e) {
            System.out.println("Data buku Gagal di tampilkan...");
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnListBuku = new javax.swing.JButton();
        btnMenu3 = new javax.swing.JButton();
        btnKembalikan = new javax.swing.JButton();
        txtNoBuku = new javax.swing.JTextField();
        txtJmlBuku = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableKembalikan = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(400, 500));

        jPanel1.setBackground(new java.awt.Color(44, 62, 80));
        jPanel1.setMinimumSize(new java.awt.Dimension(500, 400));
        jPanel1.setPreferredSize(new java.awt.Dimension(360, 400));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnListBuku.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        btnListBuku.setText("Tambahkan");
        btnListBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListBukuActionPerformed(evt);
            }
        });
        jPanel1.add(btnListBuku, new org.netbeans.lib.awtextra.AbsoluteConstraints(688, 447, 124, -1));

        btnMenu3.setFont(new java.awt.Font("Open Sans SemiCondensed", 1, 11)); // NOI18N
        btnMenu3.setText("Menu");
        btnMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenu3ActionPerformed(evt);
            }
        });
        jPanel1.add(btnMenu3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 90, 30));

        btnKembalikan.setFont(new java.awt.Font("Open Sans SemiCondensed", 1, 11)); // NOI18N
        btnKembalikan.setText("Kembalikan");
        btnKembalikan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembalikanActionPerformed(evt);
            }
        });
        jPanel1.add(btnKembalikan, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, -1, 30));

        txtNoBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoBukuActionPerformed(evt);
            }
        });
        jPanel1.add(txtNoBuku, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 190, 30));
        jPanel1.add(txtJmlBuku, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, 190, 30));

        TableKembalikan.setFont(new java.awt.Font("Open Sans SemiCondensed", 1, 12)); // NOI18N
        TableKembalikan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No.", "Nama", "Pengarang", "Jumlah"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableKembalikan.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TableKembalikan.setMinimumSize(new java.awt.Dimension(360, 250));
        TableKembalikan.setRowHeight(25);
        TableKembalikan.setShowGrid(false);
        TableKembalikan.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(TableKembalikan);
        if (TableKembalikan.getColumnModel().getColumnCount() > 0) {
            TableKembalikan.getColumnModel().getColumn(0).setResizable(false);
            TableKembalikan.getColumnModel().getColumn(0).setPreferredWidth(20);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 350, 110));

        jLabel8.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 18)); // NOI18N
        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("KEMBALIKAN BUKU");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, 30));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText("No Buku");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 60, 30));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setText("Jumlah Buku");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 90, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(414, 487));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnListBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnListBukuActionPerformed

    private void btnMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenu3ActionPerformed
        // TODO add your handling code here:
        Menu menu = new Menu();
        this.setVisible(false);
        menu.setVisible(true);
    }//GEN-LAST:event_btnMenu3ActionPerformed

    private void btnKembalikanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembalikanActionPerformed
        // TODO add your handling code here:
        String no_buku = txtNoBuku.getText();
        String jml_buku = txtJmlBuku.getText();
        
        try {
            System.out.println("Mengambil data buku di tampilkan...");
            Connection conn = Koneksi.ConnectDB();
            
            // ambil data buku from table buku
            String queryy = "SELECT * FROM tb_buku where no_bk='"+ no_buku +"'";
            Statement stt = conn.createStatement();
            ResultSet rss = stt.executeQuery(queryy);
            String Astok = null;
            while(rss.next()){
                Astok = rss.getString("stok_bk");
            }
            
            // cari id buku yang dipinjam dan jumlah stok bukunya
            String query = "SELECT * FROM tb_peminjam where no_bk='"+ no_buku +"' and userID='"+Library.session.getSession()+"'";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            String Ajumlah = null;
            while(rs.next()){
                Ajumlah = rs.getString("jumlah_bk");
            }
            
            if(Ajumlah == null){
                JOptionPane.showMessageDialog(null, "Oopss...  Buku belum dipinjam!", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("Buku belum di pinjam...");
            }else{
                if(no_buku.isEmpty() && no_buku.isBlank() && jml_buku.isEmpty() && jml_buku.isEmpty()){
                JOptionPane.showMessageDialog(null, "Oopss...  Data wajib diisi!", "Error", JOptionPane.ERROR_MESSAGE);
                }else{
                    if(Integer.parseInt(jml_buku) > Integer.parseInt(Ajumlah)){
                        JOptionPane.showMessageDialog(null, "Oopss...  Jumlah buku melebihi buku yang dipinjam!", "Error", JOptionPane.ERROR_MESSAGE);
                    }else if(Integer.parseInt(jml_buku) == Integer.parseInt(Ajumlah)){
                        String delete = "DELETE FROM `tb_peminjam` WHERE no_bk='"+ no_buku +"' and userID='"+Library.session.getSession()+"'";
                        PreparedStatement prs = conn.prepareStatement(delete);
                        prs.execute();

                        String update = "UPDATE `tb_buku` SET `stok_bk`='"+ (Integer.parseInt(Astok) + Integer.parseInt(jml_buku)) +"' WHERE `no_bk`='"+ no_buku +"'";
                        PreparedStatement prss = conn.prepareStatement(update);
                        prss.execute();
                        System.out.println("Buku Berhasil dikembalikan...");
                        JOptionPane.showMessageDialog(null, "Success...  Buku Berhasil dikembalikan!", "Success", JOptionPane.INFORMATION_MESSAGE);
                        showTableBuku();
                        clearTxt();
                    }else{
                        String update = "UPDATE `tb_peminjam` SET `jumlah_bk`='"+ (Integer.parseInt(Ajumlah) - Integer.parseInt(jml_buku)) +"' WHERE `no_bk`='"+ no_buku +"'";
                        PreparedStatement prs = conn.prepareStatement(update);
                        prs.execute();

                        String updatee = "UPDATE `tb_buku` SET `stok_bk`='"+ (Integer.parseInt(Astok) + Integer.parseInt(jml_buku)) +"' WHERE `no_bk`='"+ no_buku +"'";
                        PreparedStatement prss = conn.prepareStatement(updatee);
                        prss.execute();
                        System.out.println("Buku Berhasil dikembalikan...");
                        JOptionPane.showMessageDialog(null, "Success...  Buku Berhasil dikembalikan!", "Success", JOptionPane.INFORMATION_MESSAGE);
                        showTableBuku();
                        clearTxt();
                    }
                }
            }
            clearTxt();
            showTableBuku();
            
        } catch (SQLException e) {
            System.out.println("Data buku Gagal di tampilkan...");
            System.out.println(e);
        }
    }//GEN-LAST:event_btnKembalikanActionPerformed

    private void txtNoBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoBukuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KembalikanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KembalikanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KembalikanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KembalikanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KembalikanBuku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableKembalikan;
    private javax.swing.JButton btnKembalikan;
    private javax.swing.JButton btnListBuku;
    private javax.swing.JButton btnMenu3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtJmlBuku;
    private javax.swing.JTextField txtNoBuku;
    // End of variables declaration//GEN-END:variables
}
